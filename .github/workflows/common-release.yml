name: Release

on:
  workflow_call:
    inputs:
      versionPrefix:
        required: false
        type: string
        description: "Optional prefix to add before version number"
        default: "v"

      sign:
        required: false
        type: boolean
        description: "Sign tags"
        default: true

jobs:
  Semantic_Release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      CATALOG_TEKTON_WEBHOOK_TOKEN: ${{ secrets.CATALOG_TEKTON_WEBHOOK_TOKEN }}
      CATALOG_TEKTON_WEBHOOK_URL: ${{ secrets.CATALOG_TEKTON_WEBHOOK_URL }}
      CATALOG_PUBLISH_APIKEY: ${{ secrets.CATALOG_PUBLISH_APIKEY }}
      CATALOG_VALIDATION_APIKEY: ${{ secrets.CATALOG_VALIDATION_APIKEY }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: true

      - uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'

      - name: Install dependencies
        run: npm install semantic-release
          @semantic-release/changelog
          @semantic-release/exec
          @semantic-release/git
          @semantic-release/github

      # Release
      - name: Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_AUTHOR_NAME: "terraform-ibm-modules-ops"
          GIT_AUTHOR_EMAIL: "Terraform.IBM.Modules.Operations@ibm.com"
          GIT_COMMITTER_NAME: "terraform-ibm-modules-ops"
          GIT_COMMITTER_EMAIL: "Terraform.IBM.Modules.Operations@ibm.com"
        run: |
          if [ ! -e "./package-lock.json" ]; then ln -s /tmp/package-lock.json package-lock.json; fi
          if [ ! -d "./node_modules" ]; then ln -s /tmp/node_modules node_modules; fi
          npx semantic-release
          echo "Release complete"

      - id: versionNumber
        run: |
          echo "version=$SEMVER_VERSION"
          echo "version=$SEMVER_VERSION" >> "$GITHUB_OUTPUT"

      # Setup GPG after release      https://github.com/semantic-release/semantic-release/issues/3065
      - name: Import GPG key
        if: ${{ inputs.sign == true }}
        id: import-config-gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.RELEASE_PRIVATE_PGP }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: Sign Tag
        if: ${{ inputs.sign == true }}
        env:
          SEMVER_VERSION: ${{steps.versionNumber.outputs.version}}
        run: |
          if [ -z "$SEMVER_VERSION" ]
          then
            echo "No Release Version Set. Skip tagging"
          else
            echo "Version: ${{ inputs.versionPrefix }}${SEMVER_VERSION}"
            git tag "${{ inputs.versionPrefix }}${SEMVER_VERSION}" "${{ inputs.versionPrefix }}${SEMVER_VERSION}" -f -s -m "Sign Tag"
            export GIT_COMMITTER_DATE="$(git log -1 --format=%aD ${{ inputs.versionPrefix }}${SEMVER_VERSION})"
            git push origin "${{ inputs.versionPrefix }}${SEMVER_VERSION}" -f
          fi

  create-failure-notifications:
    needs: [ Semantic_Release ]
    uses: ./.github/workflows/create-gh-issue-and-slack-message.yml
    if: ${{ failure() }}
    secrets: inherit
