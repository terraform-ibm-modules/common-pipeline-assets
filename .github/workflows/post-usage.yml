on:
  workflow_call:
    inputs:
      required_team:
        description: Team you must be a member of for workflow to pass
        type: string
        default: github-collaborators

jobs:
  Notify-Contributor-Requirements:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && (github.event.comment.body == '/run pipeline' || github.event.comment.body == '/run pipeline ') }}
    steps:
      - name: Check Team Membership
        id: check_team
        run: |
          set -euo pipefail

          # The '${{secrets.GITHUB_TOKEN}}' secret comes out of the box with GHA - See https://docs.github.com/en/actions/security-guides/automatic-token-authentication
          # Since this secret  does not have enough permissions to run below api we use the '${{secrets.ORG_READER_GH_TOKEN}}' which is an org level secret that we own

          API_URL="https://api.github.com/orgs/${{github.event.organization.login}}/teams/${{inputs.required_team}}/memberships/${{github.actor}}"
          echo "Fetching the response for $API_URL"

          api_response=$(curl -s -o response_body.json -w "%{http_code}" -X GET -H "Authorization: Bearer ${{secrets.ORG_READER_GH_TOKEN}}" \
          -H "Accept: application/vnd.github.v3+json" "$API_URL")

          # Log messages if API failure is observed
          if [[ "$api_response" -ne 200 && "$api_response" -ne 201 ]]; then
            echo "Error: Received HTTP status $api_response while checking team membership"
            echo "======================"
            cat response_body.json
            echo "======================"
            exit 1
          fi

          # Extract the user's state
          user_in_team=$(jq -r '.state' < response_body.json)

          # Log messages if the variable user_in_team is empty or null.
          if [[ -z $user_in_team || $user_in_team == "null" ]]; then
            echo "Error: Unable to retrieve team membership state"
            exit 1
          fi

          echo "user_in_team=$user_in_team" >> $GITHUB_ENV



      - name: Post Comment and stop workflow if user is not a member
        run: |
          set -e
          echo "user_in_team=${{ env.user_in_team }}"
          if [[ "${{ env.user_in_team }}" != "active" ]]; then
            # The '${{secrets.GITHUB_TOKEN}}' secret comes out of the box with GHA - See https://docs.github.com/en/actions/security-guides/automatic-token-authentication
            response=$(curl -X POST -H "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}" \
            -H "Accept: application/vnd.github.v3+json" \
            -w "%{http_code}" \
            -o response_body_comment.json \
            https://api.github.com/repos/${{github.repository}}/issues/${{github.event.issue.number}}/comments \
            -d "{\"body\": \"@${{github.actor}} you must be in the team **[${{inputs.required_team}}](https://github.com/orgs/${{github.event.organization.login}}/teams/${{inputs.required_team}})** in order to trigger the pipeline.\"}")

            if [[ "$response" -ne 201 ]]; then
              echo "Error: Received HTTP status $response while posting comment"
              cat response_body_comment.json
              exit 1
            fi

            echo "Response code: ${response}"
            echo "Response Body:"
            echo "----------------"
            cat response_body.json
            echo "----------------"
            exit 1
          else
            echo "User is in team, continuing with workflow"
          fi
