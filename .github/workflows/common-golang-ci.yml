name: Golang-CI

on:
  workflow_call:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  notify_requirements:
    uses: ./.github/workflows/post-usage.yml
    secrets: inherit

  start-pipeline:
    needs: [notify_requirements]
    # Only start if the run pipeline was posted by a collaborator
    if: ${{ github.event.issue.pull_request && (github.event.comment.body == '/run pipeline' || github.event.comment.body == '/run pipeline ') }}
    uses: ./.github/workflows/get-latest-pr-details.yml
    with:
      github_token: ${{ github.token }}

  set-commit-status-ci-running:
    uses: ./.github/workflows/set-commit-status.yml
    needs: [ start-pipeline ]
    with:
      github_token: ${{ github.token }}
      state: "pending"
      description: "Running"
      context: "CI Pipeline"
      sha: ${{ needs.start-pipeline.outputs.commit_id }}
      target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      github_repository: ${{ github.repository }}

  trigger_ci:
    needs: [ start-pipeline ]
    uses: ./.github/workflows/ci-pipeline.yml
    secrets: inherit
    with:
      checkout_commit: ${{ needs.start-pipeline.outputs.commit_id }}
      make_command: pre-commit-no-terraform
      make_test_command: run-go-module-tests

  unit_tests:
    needs: [ start-pipeline, trigger_ci ]
    runs-on: ubuntu-latest
    container:
      image: icr.io/goldeneye_images/goldeneye-ci-image:stable
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: true
          # Clone all branches and history
          fetch-depth: 0
          ref: ${{ needs.start-pipeline.outputs.commit_id }}
      # run unit tests
      - name: Unit Tests
        run: |
          # set the safe directory to the current directory to avoid issues with git repo ownership
          git config --global --add safe.directory $(pwd)
          make run-go-module-tests

  set-commit-status-ci-success:
    needs: [ start-pipeline, trigger_ci, unit_tests ]
    if: ${{ success() }}
    uses: ./.github/workflows/set-commit-status.yml
    with:
      github_token: ${{ github.token }}
      state: "success"
      description: "Complete - Success"
      context: "CI Pipeline"
      sha: ${{ needs.start-pipeline.outputs.commit_id }}
      target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      github_repository: ${{ github.repository }}

  set-commit-status-ci-failure:
    needs: [ start-pipeline, trigger_ci, unit_tests ]
    if: ${{ failure() }}
    uses: ./.github/workflows/set-commit-status.yml
    with:
      github_token: ${{ github.token }}
      state: "failure"
      description: "Complete - Failure"
      context: "CI Pipeline"
      sha: ${{ needs.start-pipeline.outputs.commit_id }}
      target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      github_repository: ${{ github.repository }}
