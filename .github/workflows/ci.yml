name: CI-Pipeline

# Controls when the workflow will run, when comment is created
on:
  issue_comment:
    types:
      - created

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # If issue comment equals Ready for review add the label ready-for-review to the pr
  add-review-label:
    runs-on: ubuntu-latest
    steps:
      - name: Add label
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            const issueNumber = context.issue.number;
            const repo = context.repo;
            const commentBody = context.payload.comment.body.trim().toLowerCase();
            if (commentBody === 'ready for review') {
              github.issues.addLabels({
                ...repo,
                issue_number: issueNumber,
                labels: ['ready-for-review']
              });
            }

  notify_requirements:
    uses: ./.github/workflows/post-usage.yml
    secrets: inherit

  start-pipeline:
    needs: [ notify_requirements ]
    # Only start if the run pipeline was posted by a collaborator
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/run pipeline' }}
    uses: ./.github/workflows/get-latest-pr-details.yml
    with:
      github_token: ${{ github.token }}

  set-commit-status-ci-running:
    uses: ./.github/workflows/set-commit-status.yml
    needs: [ start-pipeline ]
    with:
      github_token: ${{ github.token }}
      state: "pending"
      description: "Running"
      context: "CI Pipeline"
      sha: ${{needs.start-pipeline.outputs.commit_id}}
      target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      github_repository: ${{ github.repository }}

  trigger_ci:
    needs: [ start-pipeline, set-commit-status-ci-running ]
    uses: ./.github/workflows/ci-pipeline.yml
    secrets: inherit
    with:
      checkout_commit: ${{ needs.start-pipeline.outputs.commit_id }}
      make_command: pre-commit-no-terraform

  set-commit-status-ci-success:
    needs: [ start-pipeline, trigger_ci ]
    if: ${{ success() }}
    uses: ./.github/workflows/set-commit-status.yml
    with:
      github_token: ${{ github.token }}
      state: "success"
      description: "Complete - Success"
      context: "CI Pipeline"
      sha: ${{ needs.start-pipeline.outputs.commit_id }}
      target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      github_repository: ${{ github.repository }}

  set-commit-status-ci-failure:
    needs: [ start-pipeline, trigger_ci ]
    if: ${{ failure() }}
    uses: ./.github/workflows/set-commit-status.yml
    with:
      github_token: ${{ github.token }}
      state: "failure"
      description: "Complete - Failure"
      context: "CI Pipeline"
      sha: ${{ needs.start-pipeline.outputs.commit_id }}
      target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      github_repository: ${{ github.repository }}
