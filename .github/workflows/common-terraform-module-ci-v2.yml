name: Terraform-Module-CI

on:
  workflow_call:
    inputs:
      craConfigYamlFile:
        type: string
        description: "A YAML config file containing the configuration for CRA V2. If values are missing it will try to use the other inputs as default"
        required: false
      craTarget:
        type: string
        description: "Target directory for CRA scan(accepts comma seperated list for multiple scans). If not provided CRA Scan will not be run"
        required: false
        default: ""
      craGoalIgnoreFile:
        type: string
        description: "CRA Ignore file to use(Used for SCC v1). If not provided checks repo root directory for cra-tf-validate-ignore-goals.json"
        required: false
        default: "cra-tf-validate-ignore-goals.json"
      craRuleIgnoreFile:
        type: string
        description: "CRA Ignore file to use (Used for SCC v2). If not provided checks repo root directory for cra-tf-validate-ignore-rules.json"
        required: false
        default: "cra-tf-validate-ignore-rules.json"
      craSCCv2:
        type: boolean
        description: "Use SCCv2 CRA run-cra-scc-v2.sh"
        required: false
        default: false
      accountID:
        type: string
        description: "CRA scc v2 needs the IBM Cloud Account ID as Input (Default GeDev)"
        required: false
        default: "abac0df06b644a9cabc6e44f55b3880e"
      profileID:
        type: string
        description: "CRA scc v2 needs the Pofile ID as Input. This is the profile ID you want to scan with. Note IDs are region specific ensure you use a US one (Default: US IBM Cloud for Financial Services 1.2.0)"
        required: false
        default: "1453532c-212d-4e35-8bac-286e67633607"
      craEnvironmentVariables:
        type: string
        description: "An optional list of environment variables to set for CRA, in comma seperated format 'VAR1=value1,VAR2=value2'. This can be used to provide TF_VAR's"
        required: false
        default: ""

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  notify_requirements:
    uses: ./.github/workflows/post-usage.yml
    secrets: inherit

  start-pipeline:
    needs: [notify_requirements]
    # Only start if the run pipeline was posted by a collaborator
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/run pipeline' }}
    uses: ./.github/workflows/get-latest-pr-details.yml
    with:
      github_token: ${{ github.token }}

  set-commit-status-ci-running:
    uses: ./.github/workflows/set-commit-status.yml
    needs: [ start-pipeline ]
    with:
      github_token: ${{ github.token }}
      state: "pending"
      description: "Running"
      context: "CI Pipeline"
      sha: ${{needs.start-pipeline.outputs.commit_id}}
      target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      github_repository: ${{ github.repository }}

  set-commit-status-infra-running:
    uses: ./.github/workflows/set-commit-status.yml
    needs: [ start-pipeline ]
    with:
      github_token: ${{ github.token }}
      state: "pending"
      description: "Running"
      context: "Infrastructure Test"
      sha: ${{needs.start-pipeline.outputs.commit_id}}
      target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      github_repository: ${{ github.repository }}

  trigger_ci:
    needs: [start-pipeline, set-commit-status-ci-running, set-commit-status-infra-running]
    uses: ./.github/workflows/ci-pipeline.yml
    secrets: inherit
    with:
      checkout_commit: ${{ needs.start-pipeline.outputs.commit_id }}
      make_test_command: run-tests

  trigger_infra_tests:
    needs: [start-pipeline, trigger_ci]
    secrets: inherit
    uses: ./.github/workflows/terraform-test-pipeline.yml
    with:
      checkout_commit: ${{ needs.start-pipeline.outputs.commit_id }}
      craConfigYamlFile: ${{ inputs.craConfigYamlFile }}
      craTarget: ${{ inputs.craTarget }}
      craGoalIgnoreFile: ${{ inputs.craGoalIgnoreFile }}
      craRuleIgnoreFile: ${{ inputs.craRuleIgnoreFile }}
      craSCCv2: ${{ inputs.craSCCv2 }}
      accountID: ${{ inputs.accountID }}
      profileID: ${{ inputs.profileID }}
      craEnvironmentVariables: ${{ inputs.craEnvironmentVariables }}
      GITHUB_BASE_REF: ${{ needs.start-pipeline.outputs.target_branch}}
      GITHUB_HEAD_REF: ${{ needs.start-pipeline.outputs.source_branch}}

  set-commit-status-infra-success:
    needs: [start-pipeline, trigger_infra_tests]
    if: ${{ success() }}
    uses: ./.github/workflows/set-commit-status.yml
    with:
      github_token: ${{ github.token }}
      state: "success"
      description: "Complete - Success"
      context: "Infrastructure Test"
      sha: ${{ needs.start-pipeline.outputs.commit_id }}
      target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      github_repository: ${{ github.repository }}

  set-commit-status-infra-failure:
    needs: [start-pipeline, trigger_infra_tests]
    if: ${{ failure() }}
    uses: ./.github/workflows/set-commit-status.yml
    with:
      github_token: ${{ github.token }}
      state: "failure"
      description: "Complete - Failure"
      context: "Infrastructure Test"
      sha: ${{ needs.start-pipeline.outputs.commit_id }}
      target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      github_repository: ${{ github.repository }}

  set-commit-status-ci-success:
    needs: [ start-pipeline, trigger_ci ]
    if: ${{ success() }}
    uses: ./.github/workflows/set-commit-status.yml
    with:
      github_token: ${{ github.token }}
      state: "success"
      description: "Complete - Success"
      context: "CI Pipeline"
      sha: ${{ needs.start-pipeline.outputs.commit_id }}
      target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      github_repository: ${{ github.repository }}

  set-commit-status-ci-failure:
    needs: [ start-pipeline, trigger_ci ]
    if: ${{ failure() }}
    uses: ./.github/workflows/set-commit-status.yml
    with:
      github_token: ${{ github.token }}
      state: "failure"
      description: "Complete - Failure"
      context: "CI Pipeline"
      sha: ${{ needs.start-pipeline.outputs.commit_id }}
      target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      github_repository: ${{ github.repository }}
