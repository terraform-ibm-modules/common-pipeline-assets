name: Terraform-Module-CI

on:
  workflow_call:
    inputs:
      craTarget:
        type: string
        description: "Target directory for CRA scan(accepts comma seperated list for multiple scans). If not provided CRA Scan will not be run"
        required: false
        default: ""
      craGoalIgnoreFile:
        type: string
        description: "CRA Ignore file to use(Used for SCC v1). If not provided checks repo root directory for cra-tf-validate-ignore-goals.json"
        required: false
        default: "cra-tf-validate-ignore-goals.json"
      craRuleIgnoreFile:
        type: string
        description: "CRA Ignore file to use (Used for SCC v2). If not provided checks repo root directory for cra-tf-validate-ignore-rules.json"
        required: false
        default: "cra-tf-validate-ignore-rules.json"
      craSCCv2:
        type: boolean
        description: "Use SCCv2 CRA run-cra-scc-v2.sh"
        required: false
        default: false
      accountID:
        type: boolean
        description: "CRA scc v2 needs the IBM Cloud Account ID as Input (Default GeDev)"
        required: false
        default: "abac0df06b644a9cabc6e44f55b3880e"
      profileID:
        type: boolean
        description: "CRA scc v2 needs the Pofile ID as Input. This is the profile ID you want to scan with(Default: IBM Cloud for Financial Services 1.2.0)"
        required: false
        default: "4c67f813-8723-4029-8b44-848fb989899e"
      craEnvironmentVariables:
        type: string
        description: "An optional list of environment variables to set for CRA, in comma seperated format 'VAR1=value1,VAR2=value2'. This can be used to provide TF_VAR's"
        required: false
        default: ""

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  CI_Pipeline:
    name: CI Pipeline
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Don't run job on draft PRs
    if: github.event.pull_request.draft == false
    defaults:
      run:
        shell: bash
    container:
      image: icr.io/goldeneye_images/goldeneye-ci-image:stable
      env:
        TF_VAR_ibmcloud_api_key: ${{ secrets.IBMCLOUD_API_KEY }}
        IC_API_KEY: ${{ secrets.IBMCLOUD_API_KEY }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: true
          # Clone all branches and history. This is needed for the upgrade tests
          fetch-depth: 0

      # Workaround for https://github.com/actions/runner/issues/2033
      - name: Set ownership
        run: |
          chown -R $(id -u):$(id -g) $PWD

      # Install dependencies
      - name: Install dependencies
        run: |
          make dependency-install-darwin-linux

      # Check for pre-commit updates if it is a renovate PR
      - name: Renovate sweeper
        run: |
          make renovate-sweeper

      # run pre-commit against all files
      - name: Pre-commit
        run: |
          make pre-commit

  Infrastructure_Tests:
    name: Infrastructure Test
    runs-on: ubuntu-latest
    # Don't run job on draft PRs
    if: github.event.pull_request.draft == false
    defaults:
      run:
        shell: bash
    container:
      image: icr.io/goldeneye_images/goldeneye-ci-image:stable
      env:
        TF_VAR_ibmcloud_api_key: ${{ secrets.IBMCLOUD_API_KEY }}
        IC_API_KEY: ${{ secrets.IBMCLOUD_API_KEY }}
        TOOLCHAIN_ID: ${{ secrets.IAC_GE_OPS_TOOLCHAIN_ID }}
        MZ_INGESTION_KEY: ${{ secrets.MZ_INGESTION_KEY }}
        TF_VAR_ibmcloud_api_key_ext: ${{ secrets.IBMCLOUD_API_KEY_GEStaging }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: true
          # Clone all branches and history. This is needed for the upgrade tests
          fetch-depth: 0

      # Workaround for https://github.com/actions/runner/issues/2033
      - name: Set ownership
        run: |
          chown -R $(id -u):$(id -g) $PWD

      # Install dependencies
      - name: Install dependencies
        run: |
          make dependency-install-darwin-linux

      # run CRA scan
      - name: CRA Scan
        if: inputs.craTarget != ''
        run: |
          #!/bin/bash
          set -e

          export CRA_IGNORE_GOALS_FILE="$(pwd)/${{ inputs.craGoalIgnoreFile }}"
          echo "CRA IGNORE FILE: ${CRA_IGNORE_GOALS_FILE}"
          ENV_VARS="${{ inputs.craEnvironmentVariables }}"
          if [ -n "$ENV_VARS" ]; then
            IFS=',' read -ra ENV_VARS_ARRAY <<< "$ENV_VARS"
            for i in "${ENV_VARS_ARRAY[@]}"; do
              # Use an array to store the variable and value
              ENV_VAR=(${i//=/ })
              echo "Exporting environment variable: ${ENV_VAR[0]}"
              export "${ENV_VAR[0]}"="${ENV_VAR[1]}"
            done
          else
            echo "No input environment variables to export"
          fi

          # Install CRA plugin if not detected
          if ! ibmcloud plugin show cra; then
            ibmcloud plugin install cra -f
          fi

          # Run CRA scan for each target in the comma-separated list
          IFS=',' read -ra CRA_TARGETS_ARRAY <<< "${{ inputs.craTarget }}"
          for target in "${CRA_TARGETS_ARRAY[@]}"; do
            if ${{ inputs.craSCCv2 }}; then
              ci/run-cra-scc-v2.sh "$target" "${{ inputs.accountID }}" "${{ inputs.profileID }}" "${{ inputs.craRuleIgnoreFile }}"
            else
              ci/run-cra.sh "$target"
            fi
          done

      # run unit tests
      - name: Unit Tests
        run: |
          make run-tests
