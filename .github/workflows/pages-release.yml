name: Github Pages Release

on:
  workflow_call:
    inputs:
      versionPrefix:
        required: false
        type: string
        description: "Optional prefix to add before version number"
        default: "v"

      sign:
        required: false
        type: boolean
        description: "Sign tags"
        default: true

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ./node_modules
            ./client/node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          make clean-npm
      - name: npm test
        run: |
          npm test
      - name: npm build
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build/'
  Semantic_Release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: Build

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: true

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install semantic-release
          @semantic-release/changelog
          @semantic-release/exec
          @semantic-release/git
          @semantic-release/github

      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Release
      - name: Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_AUTHOR_NAME: "terraform-ibm-modules-ops"
          GIT_AUTHOR_EMAIL: "Terraform.IBM.Modules.Operations@ibm.com"
          GIT_COMMITTER_NAME: "terraform-ibm-modules-ops"
          GIT_COMMITTER_EMAIL: "Terraform.IBM.Modules.Operations@ibm.com"
        run: |
          if [ ! -e "./package-lock.json" ]; then ln -s /tmp/package-lock.json package-lock.json; fi
          if [ ! -d "./node_modules" ]; then ln -s /tmp/node_modules node_modules; fi
          npx semantic-release
          echo "Release complete"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - id: versionNumber
        run: |
          echo "version=$SEMVER_VERSION"
          echo "version=$SEMVER_VERSION" >> "$GITHUB_OUTPUT"

  create-failure-notifications:
    needs: [ Semantic_Release ]
    uses: ./.github/workflows/create-gh-issue-and-slack-message.yml
    if: ${{ failure() }}
    secrets: inherit
